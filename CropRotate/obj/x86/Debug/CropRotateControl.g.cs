#pragma checksum "C:\Users\kristoffer.CORP\Documents\Visual Studio 2015\Projects\CropRotate\CropRotate\CropRotateControl.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "221D2310379532B400A08CAF7F5425E0"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CropRotate
{
    partial class CropRotateControl : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_CropRotate_SelectionAreaControl_RotationAngle(global::CropRotate.SelectionAreaControl obj, global::System.Double value)
            {
                obj.RotationAngle = value;
            }
            public static void Set_Windows_UI_Xaml_Documents_Run_Text(global::Windows.UI.Xaml.Documents.Run obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        private class CropRotateControl_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICropRotateControl_Bindings
        {
            private global::CropRotate.CropRotateControl dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Image obj3;
            private global::CropRotate.SelectionAreaControl obj4;
            private global::Windows.UI.Xaml.Documents.Run obj5;
            private global::Windows.UI.Xaml.Documents.Run obj6;

            private CropRotateControl_obj1_BindingsTracking bindingsTracking;

            public CropRotateControl_obj1_Bindings()
            {
                this.bindingsTracking = new CropRotateControl_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3:
                        this.obj3 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 4:
                        this.obj4 = (global::CropRotate.SelectionAreaControl)target;
                        break;
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    case 6:
                        this.obj6 = (global::Windows.UI.Xaml.Documents.Run)target;
                        break;
                    default:
                        break;
                }
            }

            // ICropRotateControl_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // CropRotateControl_obj1_Bindings

            public void SetDataRoot(global::CropRotate.CropRotateControl newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::CropRotate.CropRotateControl obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                        this.Update_RotationAngle(obj.RotationAngle, phase);
                        this.Update_SelectionArea(obj.SelectionArea, phase);
                    }
                }
            }
            private void Update_Image(global::Windows.UI.Xaml.Media.ImageSource obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj3, obj, null);
                }
            }
            private void Update_RotationAngle(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_CropRotate_SelectionAreaControl_RotationAngle(this.obj4, obj);
                }
            }
            private void Update_SelectionArea(global::CropRotate.SelectionAreaControl obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SelectionArea(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SelectionArea_HorizontalOffset(obj.HorizontalOffset, phase);
                        this.Update_SelectionArea_VerticalOffset(obj.VerticalOffset, phase);
                    }
                }
            }
            private void Update_SelectionArea_HorizontalOffset(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj5, obj.ToString(), null);
                }
            }
            private void Update_SelectionArea_VerticalOffset(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Documents_Run_Text(this.obj6, obj.ToString(), null);
                }
            }

            private class CropRotateControl_obj1_BindingsTracking
            {
                global::System.WeakReference<CropRotateControl_obj1_Bindings> WeakRefToBindingObj; 

                public CropRotateControl_obj1_BindingsTracking(CropRotateControl_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<CropRotateControl_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_SelectionArea(null);
                }

                public void DependencyPropertyChanged_Image(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CropRotateControl_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::CropRotate.CropRotateControl obj = sender as global::CropRotate.CropRotateControl;
        if (obj != null)
        {
            bindings.Update_Image(obj.Image, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_RotationAngle(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CropRotateControl_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::CropRotate.CropRotateControl obj = sender as global::CropRotate.CropRotateControl;
        if (obj != null)
        {
            bindings.Update_RotationAngle(obj.RotationAngle, DATA_CHANGED);
        }
                    }
                }
                private long tokenDPC_Image = 0;
                private long tokenDPC_RotationAngle = 0;
                public void UpdateChildListeners_(global::CropRotate.CropRotateControl obj)
                {
                    CropRotateControl_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CropRotate.CropRotateControl.ImageProperty, tokenDPC_Image);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::CropRotate.CropRotateControl.RotationAngleProperty, tokenDPC_RotationAngle);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_Image = obj.RegisterPropertyChangedCallback(global::CropRotate.CropRotateControl.ImageProperty, DependencyPropertyChanged_Image);
                            tokenDPC_RotationAngle = obj.RegisterPropertyChangedCallback(global::CropRotate.CropRotateControl.RotationAngleProperty, DependencyPropertyChanged_RotationAngle);
                        }
                    }
                }
                public void DependencyPropertyChanged_SelectionArea_HorizontalOffset(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CropRotateControl_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::CropRotate.SelectionAreaControl obj = sender as global::CropRotate.SelectionAreaControl;
        if (obj != null)
        {
            bindings.Update_SelectionArea_HorizontalOffset(obj.HorizontalOffset, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_SelectionArea_VerticalOffset(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CropRotateControl_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::CropRotate.SelectionAreaControl obj = sender as global::CropRotate.SelectionAreaControl;
        if (obj != null)
        {
            bindings.Update_SelectionArea_VerticalOffset(obj.VerticalOffset, DATA_CHANGED);
        }
                    }
                }
                private global::CropRotate.SelectionAreaControl cache_SelectionArea = null;
                private long tokenDPC_SelectionArea_HorizontalOffset = 0;
                private long tokenDPC_SelectionArea_VerticalOffset = 0;
                public void UpdateChildListeners_SelectionArea(global::CropRotate.SelectionAreaControl obj)
                {
                    if (obj != cache_SelectionArea)
                    {
                        if (cache_SelectionArea != null)
                        {
                            cache_SelectionArea.UnregisterPropertyChangedCallback(global::CropRotate.SelectionAreaControl.HorizontalOffsetProperty, tokenDPC_SelectionArea_HorizontalOffset);
                            cache_SelectionArea.UnregisterPropertyChangedCallback(global::CropRotate.SelectionAreaControl.VerticalOffsetProperty, tokenDPC_SelectionArea_VerticalOffset);
                            cache_SelectionArea = null;
                        }
                        if (obj != null)
                        {
                            cache_SelectionArea = obj;
                            tokenDPC_SelectionArea_HorizontalOffset = obj.RegisterPropertyChangedCallback(global::CropRotate.SelectionAreaControl.HorizontalOffsetProperty, DependencyPropertyChanged_SelectionArea_HorizontalOffset);
                            tokenDPC_SelectionArea_VerticalOffset = obj.RegisterPropertyChangedCallback(global::CropRotate.SelectionAreaControl.VerticalOffsetProperty, DependencyPropertyChanged_SelectionArea_VerticalOffset);
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.RotateTransfom = (global::Windows.UI.Xaml.Media.RotateTransform)(target);
                }
                break;
            case 4:
                {
                    this.SelectionArea = (global::CropRotate.SelectionAreaControl)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    CropRotateControl_obj1_Bindings bindings = new CropRotateControl_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

